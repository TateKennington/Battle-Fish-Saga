[gd_scene load_steps=16 format=2]

[ext_resource path="res://Enemy/Enemy.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "texture"

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]
output_port_for_preview = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.25 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "Depth"

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.75, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeColorOp" id=9]
operator = 4

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 2
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv"

[sub_resource type="VisualShader" id=12]
code = "shader_type canvas_item;
uniform float Depth;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:2
	float n_out2p0 = Depth;

// Input:9
	vec3 n_out9p0 = vec3(UV, 0.0);

// VectorDecompose:11
	float n_out11p0 = n_out9p0.x;
	float n_out11p1 = n_out9p0.y;
	float n_out11p2 = n_out9p0.z;

// ScalarOp:12
	float n_in12p1 = 0.25000;
	float n_out12p0 = n_out11p1 * n_in12p1;

// ScalarOp:13
	float n_out13p0 = n_out2p0 + n_out12p0;

// ScalarOp:3
	float n_in3p0 = 0.75000;
	float n_out3p0 = n_in3p0 - n_out13p0;

// ScalarOp:4
	float n_in4p1 = 2.00000;
	float n_out4p0 = pow(n_out3p0, n_in4p1);

// VectorCompose:5
	vec3 n_out5p0 = vec3(n_out4p0, n_out4p0, n_out4p0);

// Input:10

// Texture:8
	vec3 n_out8p0;
	float n_out8p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out9p0.xy);
		n_out8p0 = _tex_read.rgb;
		n_out8p1 = _tex_read.a;
	}

// ColorOp:6
	vec3 n_out6p0;
	{
		float base = n_out5p0.x;
		float blend = n_out8p0.x;
		if (base < 0.5) {
			n_out6p0.x = 2.0 * base * blend;
		} else {
			n_out6p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.y;
		float blend = n_out8p0.y;
		if (base < 0.5) {
			n_out6p0.y = 2.0 * base * blend;
		} else {
			n_out6p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.z;
		float blend = n_out8p0.z;
		if (base < 0.5) {
			n_out6p0.z = 2.0 * base * blend;
		} else {
			n_out6p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out8p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -1012.62, 0 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -1160, 140 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -600, 120 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -320, 120 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( -100, 120 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 140, 140 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( -120, 280 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -1400, 420 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -720, 480 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -1180, 280 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -920, 260 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -820, 120 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 4, 0, 5, 1, 4, 0, 5, 2, 5, 0, 6, 0, 8, 0, 6, 1, 8, 1, 0, 1, 10, 0, 8, 2, 9, 0, 8, 0, 6, 0, 0, 0, 9, 0, 11, 0, 11, 1, 12, 0, 12, 0, 13, 1, 2, 0, 13, 0, 13, 0, 3, 1 )

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/Depth = 0.0

[node name="Enemy" type="Node2D"]
script = ExtResource( 1 )

[node name="Sprite" type="AnimatedSprite" parent="."]
material = SubResource( 13 )

[node name="Tween" type="Tween" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

[node name="Camera2D" type="Camera2D" parent="."]
current = true
limit_top = 0
limit_bottom = 300
