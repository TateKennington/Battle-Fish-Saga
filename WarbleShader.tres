[gd_resource type="VisualShader" load_steps=27 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id=12]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorCompose" id=13]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "Repeat"

[sub_resource type="VisualShaderNodeScalarUniform" id=16]
uniform_name = "Displacement"

[sub_resource type="VisualShaderNodeScalarUniform" id=17]
uniform_name = "Frequency"

[sub_resource type="VisualShaderNodeScalarUniform" id=18]
uniform_name = "HeightModifier"

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 15.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]

[sub_resource type="VisualShaderNodeScalarUniform" id=21]
uniform_name = "X_Modifier"

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=23]
source = 2

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "time"

[resource]
code = "shader_type canvas_item;
uniform float Frequency;
uniform float X_Modifier;
uniform float Repeat;
uniform float HeightModifier;
uniform float Displacement;



void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// VectorDecompose:12
	float n_out12p0 = n_out6p0.x;
	float n_out12p1 = n_out6p0.y;
	float n_out12p2 = n_out6p0.z;

// ScalarOp:15
	float n_in15p1 = 10.00000;
	float n_out15p0 = n_out12p1 * n_in15p1;

// Input:9
	float n_out9p0 = TIME;

// ScalarUniform:26
	float n_out26p0 = Frequency;

// ScalarOp:16
	float n_out16p0 = n_out9p0 * n_out26p0;

// ScalarUniform:30
	float n_out30p0 = X_Modifier;

// ScalarOp:28
	float n_out28p0 = n_out12p0 * n_out30p0;

// ScalarOp:29
	float n_out29p0 = n_out16p0 + n_out28p0;

// ScalarOp:13
	float n_out13p0 = n_out15p0 + n_out29p0;

// ScalarFunc:10
	float n_out10p0 = sin(n_out13p0);

// ScalarOp:19
	float n_in19p0 = 1.00000;
	float n_out19p0 = n_in19p0 - n_out12p1;

// ScalarUniform:24
	float n_out24p0 = Repeat;

// ScalarOp:18
	float n_out18p0 = mod(n_out19p0, n_out24p0);

// ScalarUniform:27
	float n_out27p0 = HeightModifier;

// ScalarOp:17
	float n_out17p0 = n_out18p0 / n_out27p0;

// ScalarOp:14
	float n_out14p0 = n_out10p0 * n_out17p0;

// ScalarUniform:25
	float n_out25p0 = Displacement;

// ScalarOp:20
	float n_out20p0 = n_out14p0 * n_out25p0;

// VectorCompose:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out20p0, n_in11p1, n_in11p2);

// VectorOp:7
	vec3 n_out7p0 = n_out6p0 + n_out11p0;

// Input:4

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out7p0.xy);
		n_out5p0 = _tex_read.rgb;
		n_out5p1 = _tex_read.a;
	}

// ScalarOp:23
	float n_in23p1 = 2.00000;
	float n_out23p0 = pow(n_out19p0, n_in23p1);

// VectorCompose:22
	vec3 n_out22p0 = vec3(n_out23p0, n_out23p0, n_out23p0);

// ColorOp:21
	vec3 n_out21p0;
	{
		float base = n_out5p0.x;
		float blend = n_out22p0.x;
		if (base < 0.5) {
			n_out21p0.x = 2.0 * base * blend;
		} else {
			n_out21p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.y;
		float blend = n_out22p0.y;
		if (base < 0.5) {
			n_out21p0.y = 2.0 * base * blend;
		} else {
			n_out21p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.z;
		float blend = n_out22p0.z;
		if (base < 0.5) {
			n_out21p0.z = 2.0 * base * blend;
		} else {
			n_out21p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Output:0
	COLOR.rgb = n_out21p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -1299.64, 122.6 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 580, -100 )
nodes/fragment/4/node = SubResource( 22 )
nodes/fragment/4/position = Vector2( -80, -60 )
nodes/fragment/5/node = SubResource( 23 )
nodes/fragment/5/position = Vector2( 160, -140 )
nodes/fragment/6/node = SubResource( 24 )
nodes/fragment/6/position = Vector2( -1200, -140 )
nodes/fragment/7/node = SubResource( 25 )
nodes/fragment/7/position = Vector2( -840, -240 )
nodes/fragment/9/node = SubResource( 26 )
nodes/fragment/9/position = Vector2( -1340, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -380, 300 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 340, 300 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -900, 80 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -620, 320 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -120, 280 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -640, 180 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -1140, 340 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -180, 40 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -400, 0 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -740, -60 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 100, 280 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 380, -300 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -120, -340 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -460, -320 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( -1400, 80 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( -180, 460 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( -1340, 460 )
nodes/fragment/27/node = SubResource( 18 )
nodes/fragment/27/position = Vector2( 80, 40 )
nodes/fragment/28/node = SubResource( 19 )
nodes/fragment/28/position = Vector2( -1080, 160 )
nodes/fragment/29/node = SubResource( 20 )
nodes/fragment/29/position = Vector2( -869.418, 316 )
nodes/fragment/30/node = SubResource( 21 )
nodes/fragment/30/position = Vector2( -1380, 220 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 2, 6, 0, 7, 0, 7, 0, 5, 0, 11, 0, 7, 1, 6, 0, 12, 0, 13, 0, 10, 0, 10, 0, 14, 0, 12, 1, 15, 0, 15, 0, 13, 0, 9, 0, 16, 0, 17, 0, 14, 1, 18, 0, 17, 0, 12, 1, 19, 1, 19, 0, 18, 0, 14, 0, 20, 0, 20, 0, 11, 0, 5, 0, 21, 0, 22, 0, 21, 1, 19, 0, 23, 0, 23, 0, 22, 0, 23, 0, 22, 1, 23, 0, 22, 2, 21, 0, 0, 0, 5, 1, 0, 1, 24, 0, 18, 1, 25, 0, 20, 1, 26, 0, 16, 1, 27, 0, 17, 1, 12, 0, 28, 0, 16, 0, 29, 0, 29, 0, 13, 1, 28, 0, 29, 1, 30, 0, 28, 1 )
